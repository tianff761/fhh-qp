//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class DragonBones_UnityEventDispatcher_DragonBones_EventObjectWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(DragonBones.UnityEventDispatcher<DragonBones.EventObject>), typeof(UnityEngine.MonoBehaviour), "UnityEventDispatcher_DragonBones_EventObject");
		L.RegFunction("DispatchEvent", DispatchEvent);
		L.RegFunction("HasEventListener", HasEventListener);
		L.RegFunction("AddEventListener", AddEventListener);
		L.RegFunction("RemoveEventListener", RemoveEventListener);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DispatchEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			DragonBones.UnityEventDispatcher<DragonBones.EventObject> obj = (DragonBones.UnityEventDispatcher<DragonBones.EventObject>)ToLua.CheckObject<DragonBones.UnityEventDispatcher<DragonBones.EventObject>>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			DragonBones.EventObject arg1 = (DragonBones.EventObject)ToLua.CheckObject<DragonBones.EventObject>(L, 3);
			obj.DispatchEvent(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HasEventListener(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			DragonBones.UnityEventDispatcher<DragonBones.EventObject> obj = (DragonBones.UnityEventDispatcher<DragonBones.EventObject>)ToLua.CheckObject<DragonBones.UnityEventDispatcher<DragonBones.EventObject>>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			bool o = obj.HasEventListener(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddEventListener(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			DragonBones.UnityEventDispatcher<DragonBones.EventObject> obj = (DragonBones.UnityEventDispatcher<DragonBones.EventObject>)ToLua.CheckObject<DragonBones.UnityEventDispatcher<DragonBones.EventObject>>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			DragonBones.ListenerDelegate<DragonBones.EventObject> arg1 = (DragonBones.ListenerDelegate<DragonBones.EventObject>)ToLua.CheckDelegate<DragonBones.ListenerDelegate<DragonBones.EventObject>>(L, 3);
			obj.AddEventListener(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveEventListener(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			DragonBones.UnityEventDispatcher<DragonBones.EventObject> obj = (DragonBones.UnityEventDispatcher<DragonBones.EventObject>)ToLua.CheckObject<DragonBones.UnityEventDispatcher<DragonBones.EventObject>>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			DragonBones.ListenerDelegate<DragonBones.EventObject> arg1 = (DragonBones.ListenerDelegate<DragonBones.EventObject>)ToLua.CheckDelegate<DragonBones.ListenerDelegate<DragonBones.EventObject>>(L, 3);
			obj.RemoveEventListener(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

