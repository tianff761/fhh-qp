//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class LuaFramework_AssetTypeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(LuaFramework.AssetType), typeof(System.Object));
		L.RegFunction("New", _CreateLuaFramework_AssetType);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("GAME_OBJECT", get_GAME_OBJECT, set_GAME_OBJECT);
		L.RegVar("SPRITE", get_SPRITE, set_SPRITE);
		L.RegVar("TEXTURE", get_TEXTURE, set_TEXTURE);
		L.RegVar("TEXT_ASSET", get_TEXT_ASSET, set_TEXT_ASSET);
		L.RegVar("AUDIO_CLIP", get_AUDIO_CLIP, set_AUDIO_CLIP);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateLuaFramework_AssetType(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				LuaFramework.AssetType obj = new LuaFramework.AssetType();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: LuaFramework.AssetType.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_GAME_OBJECT(IntPtr L)
	{
		try
		{
			ToLua.Push(L, LuaFramework.AssetType.GAME_OBJECT);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SPRITE(IntPtr L)
	{
		try
		{
			ToLua.Push(L, LuaFramework.AssetType.SPRITE);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TEXTURE(IntPtr L)
	{
		try
		{
			ToLua.Push(L, LuaFramework.AssetType.TEXTURE);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TEXT_ASSET(IntPtr L)
	{
		try
		{
			ToLua.Push(L, LuaFramework.AssetType.TEXT_ASSET);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AUDIO_CLIP(IntPtr L)
	{
		try
		{
			ToLua.Push(L, LuaFramework.AssetType.AUDIO_CLIP);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_GAME_OBJECT(IntPtr L)
	{
		try
		{
			System.Type arg0 = ToLua.CheckMonoType(L, 2);
			LuaFramework.AssetType.GAME_OBJECT = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_SPRITE(IntPtr L)
	{
		try
		{
			System.Type arg0 = ToLua.CheckMonoType(L, 2);
			LuaFramework.AssetType.SPRITE = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_TEXTURE(IntPtr L)
	{
		try
		{
			System.Type arg0 = ToLua.CheckMonoType(L, 2);
			LuaFramework.AssetType.TEXTURE = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_TEXT_ASSET(IntPtr L)
	{
		try
		{
			System.Type arg0 = ToLua.CheckMonoType(L, 2);
			LuaFramework.AssetType.TEXT_ASSET = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_AUDIO_CLIP(IntPtr L)
	{
		try
		{
			System.Type arg0 = ToLua.CheckMonoType(L, 2);
			LuaFramework.AssetType.AUDIO_CLIP = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

