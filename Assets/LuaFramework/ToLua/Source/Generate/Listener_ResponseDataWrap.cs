//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Listener_ResponseDataWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Listener<ResponseData>), typeof(System.Object), "Listener_ResponseData");
		L.RegFunction("AddListener", AddListener);
		L.RegFunction("RemoveListener", RemoveListener);
		L.RegFunction("Callback", Callback);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddListener(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Listener<ResponseData> obj = (Listener<ResponseData>)ToLua.CheckObject<Listener<ResponseData>>(L, 1);
			System.Action<ResponseData> arg0 = (System.Action<ResponseData>)ToLua.CheckDelegate<System.Action<ResponseData>>(L, 2);
			obj.AddListener(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveListener(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Listener<ResponseData> obj = (Listener<ResponseData>)ToLua.CheckObject<Listener<ResponseData>>(L, 1);
			System.Action<ResponseData> arg0 = (System.Action<ResponseData>)ToLua.CheckDelegate<System.Action<ResponseData>>(L, 2);
			obj.RemoveListener(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Callback(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Listener<ResponseData> obj = (Listener<ResponseData>)ToLua.CheckObject<Listener<ResponseData>>(L, 1);
			ResponseData arg0 = (ResponseData)ToLua.CheckObject<ResponseData>(L, 2);
			obj.Callback(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

