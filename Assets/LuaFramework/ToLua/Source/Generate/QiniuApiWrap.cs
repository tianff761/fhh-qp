//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class QiniuApiWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(QiniuApi), typeof(System.Object));
		L.RegFunction("Init", Init);
		L.RegFunction("Upload", Upload);
		L.RegFunction("Download", Download);
		L.RegFunction("GetDownloadLoaclPath", GetDownloadLoaclPath);
		L.RegFunction("StopDownload", StopDownload);
		L.RegFunction("New", _CreateQiniuApi);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("FORM_MIME_URLENCODED", get_FORM_MIME_URLENCODED, set_FORM_MIME_URLENCODED);
		L.RegVar("FORM_MIME_OCTECT", get_FORM_MIME_OCTECT, set_FORM_MIME_OCTECT);
		L.RegVar("FORM_MIME_JSON", get_FORM_MIME_JSON, set_FORM_MIME_JSON);
		L.RegVar("FORM_BOUNDARY_TAG", get_FORM_BOUNDARY_TAG, set_FORM_BOUNDARY_TAG);
		L.RegVar("COPY_BYTES_BUFFER", get_COPY_BYTES_BUFFER, set_COPY_BYTES_BUFFER);
		L.RegVar("AccessKey", get_AccessKey, set_AccessKey);
		L.RegVar("SecretKey", get_SecretKey, set_SecretKey);
		L.RegVar("UploadHost", get_UploadHost, set_UploadHost);
		L.RegVar("Bucket", get_Bucket, set_Bucket);
		L.RegVar("Host", get_Host, set_Host);
		L.RegVar("DeleteAfterDays", get_DeleteAfterDays, set_DeleteAfterDays);
		L.RegVar("UploadRetryTotal", get_UploadRetryTotal, set_UploadRetryTotal);
		L.RegVar("DownloadRetryTotal", get_DownloadRetryTotal, set_DownloadRetryTotal);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateQiniuApi(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				QiniuApi obj = new QiniuApi();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: QiniuApi.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				QiniuApi.Init();
				return 0;
			}
			else if (count == 1)
			{
				string arg0 = ToLua.CheckString(L, 1);
				QiniuApi.Init(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: QiniuApi.Init");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Upload(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			string arg0 = ToLua.CheckString(L, 1);
			string arg1 = ToLua.CheckString(L, 2);
			System.Action<int,string> arg2 = (System.Action<int,string>)ToLua.CheckDelegate<System.Action<int,string>>(L, 3);
			QiniuApi.Upload(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Download(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			string arg0 = ToLua.CheckString(L, 1);
			System.Action<int,string> arg1 = (System.Action<int,string>)ToLua.CheckDelegate<System.Action<int,string>>(L, 2);
			QiniuApi.Download(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetDownloadLoaclPath(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			string arg0 = ToLua.CheckString(L, 1);
			string o = QiniuApi.GetDownloadLoaclPath(arg0);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StopDownload(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			QiniuApi.StopDownload();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FORM_MIME_URLENCODED(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, QiniuApi.FORM_MIME_URLENCODED);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FORM_MIME_OCTECT(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, QiniuApi.FORM_MIME_OCTECT);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FORM_MIME_JSON(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, QiniuApi.FORM_MIME_JSON);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FORM_BOUNDARY_TAG(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, QiniuApi.FORM_BOUNDARY_TAG);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_COPY_BYTES_BUFFER(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, QiniuApi.COPY_BYTES_BUFFER);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AccessKey(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, QiniuApi.AccessKey);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SecretKey(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, QiniuApi.SecretKey);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UploadHost(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, QiniuApi.UploadHost);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Bucket(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, QiniuApi.Bucket);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Host(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, QiniuApi.Host);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DeleteAfterDays(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, QiniuApi.DeleteAfterDays);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UploadRetryTotal(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, QiniuApi.UploadRetryTotal);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DownloadRetryTotal(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, QiniuApi.DownloadRetryTotal);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_FORM_MIME_URLENCODED(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			QiniuApi.FORM_MIME_URLENCODED = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_FORM_MIME_OCTECT(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			QiniuApi.FORM_MIME_OCTECT = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_FORM_MIME_JSON(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			QiniuApi.FORM_MIME_JSON = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_FORM_BOUNDARY_TAG(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			QiniuApi.FORM_BOUNDARY_TAG = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_COPY_BYTES_BUFFER(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			QiniuApi.COPY_BYTES_BUFFER = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_AccessKey(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			QiniuApi.AccessKey = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_SecretKey(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			QiniuApi.SecretKey = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_UploadHost(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			QiniuApi.UploadHost = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Bucket(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			QiniuApi.Bucket = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Host(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			QiniuApi.Host = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_DeleteAfterDays(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			QiniuApi.DeleteAfterDays = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_UploadRetryTotal(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			QiniuApi.UploadRetryTotal = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_DownloadRetryTotal(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			QiniuApi.DownloadRetryTotal = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

