//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GpsHelperWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(GpsHelper), typeof(System.Object));
		L.RegFunction("Check", Check);
		L.RegFunction("New", _CreateGpsHelper);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("LocationEnabled", get_LocationEnabled, set_LocationEnabled);
		L.RegVar("IsChecking", get_IsChecking, set_IsChecking);
		L.RegVar("LastCheckTime", get_LastCheckTime, set_LastCheckTime);
		L.RegVar("Latitude", get_Latitude, set_Latitude);
		L.RegVar("Longitude", get_Longitude, set_Longitude);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateGpsHelper(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				GpsHelper obj = new GpsHelper();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: GpsHelper.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Check(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			System.Action<float,float> arg0 = (System.Action<float,float>)ToLua.CheckDelegate<System.Action<float,float>>(L, 1);
			GpsHelper.Check(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LocationEnabled(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, GpsHelper.LocationEnabled);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsChecking(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, GpsHelper.IsChecking);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LastCheckTime(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushnumber(L, GpsHelper.LastCheckTime);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Latitude(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushnumber(L, GpsHelper.Latitude);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Longitude(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushnumber(L, GpsHelper.Longitude);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_LocationEnabled(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			GpsHelper.LocationEnabled = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_IsChecking(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			GpsHelper.IsChecking = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_LastCheckTime(IntPtr L)
	{
		try
		{
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			GpsHelper.LastCheckTime = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Latitude(IntPtr L)
	{
		try
		{
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			GpsHelper.Latitude = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Longitude(IntPtr L)
	{
		try
		{
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			GpsHelper.Longitude = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

