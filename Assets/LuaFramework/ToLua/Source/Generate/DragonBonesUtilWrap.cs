//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class DragonBonesUtilWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(DragonBonesUtil), typeof(System.Object));
		L.RegFunction("SetTimeScale", SetTimeScale);
		L.RegFunction("Play", Play);
		L.RegFunction("ChangeArmatureData", ChangeArmatureData);
		L.RegFunction("Stop", Stop);
		L.RegFunction("UnPause", UnPause);
		L.RegFunction("AddEventListener", AddEventListener);
		L.RegFunction("RemoveEventListener", RemoveEventListener);
		L.RegFunction("New", _CreateDragonBonesUtil);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateDragonBonesUtil(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				DragonBonesUtil obj = new DragonBonesUtil();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: DragonBonesUtil.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetTimeScale(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			DragonBones.UnityArmatureComponent arg0 = (DragonBones.UnityArmatureComponent)ToLua.CheckObject<DragonBones.UnityArmatureComponent>(L, 1);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 2);
			DragonBonesUtil.SetTimeScale(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Play(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				DragonBones.UnityArmatureComponent arg0 = (DragonBones.UnityArmatureComponent)ToLua.CheckObject<DragonBones.UnityArmatureComponent>(L, 1);
				DragonBonesUtil.Play(arg0);
				return 0;
			}
			else if (count == 2)
			{
				DragonBones.UnityArmatureComponent arg0 = (DragonBones.UnityArmatureComponent)ToLua.CheckObject<DragonBones.UnityArmatureComponent>(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				DragonBonesUtil.Play(arg0, arg1);
				return 0;
			}
			else if (count == 3)
			{
				DragonBones.UnityArmatureComponent arg0 = (DragonBones.UnityArmatureComponent)ToLua.CheckObject<DragonBones.UnityArmatureComponent>(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				int arg2 = (int)LuaDLL.luaL_checknumber(L, 3);
				DragonBonesUtil.Play(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: DragonBonesUtil.Play");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ChangeArmatureData(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				DragonBones.UnityArmatureComponent arg0 = (DragonBones.UnityArmatureComponent)ToLua.CheckObject<DragonBones.UnityArmatureComponent>(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				DragonBonesUtil.ChangeArmatureData(arg0, arg1);
				return 0;
			}
			else if (count == 3)
			{
				DragonBones.UnityArmatureComponent arg0 = (DragonBones.UnityArmatureComponent)ToLua.CheckObject<DragonBones.UnityArmatureComponent>(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				string arg2 = ToLua.CheckString(L, 3);
				DragonBonesUtil.ChangeArmatureData(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: DragonBonesUtil.ChangeArmatureData");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Stop(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			DragonBones.UnityArmatureComponent arg0 = (DragonBones.UnityArmatureComponent)ToLua.CheckObject<DragonBones.UnityArmatureComponent>(L, 1);
			DragonBonesUtil.Stop(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnPause(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			DragonBones.UnityArmatureComponent arg0 = (DragonBones.UnityArmatureComponent)ToLua.CheckObject<DragonBones.UnityArmatureComponent>(L, 1);
			DragonBonesUtil.UnPause(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddEventListener(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			DragonBones.UnityArmatureComponent arg0 = (DragonBones.UnityArmatureComponent)ToLua.CheckObject<DragonBones.UnityArmatureComponent>(L, 1);
			string arg1 = ToLua.CheckString(L, 2);
			System.Action<string,DragonBones.EventObject> arg2 = (System.Action<string,DragonBones.EventObject>)ToLua.CheckDelegate<System.Action<string,DragonBones.EventObject>>(L, 3);
			DragonBonesUtil.AddEventListener(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveEventListener(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			DragonBones.UnityArmatureComponent arg0 = (DragonBones.UnityArmatureComponent)ToLua.CheckObject<DragonBones.UnityArmatureComponent>(L, 1);
			string arg1 = ToLua.CheckString(L, 2);
			DragonBones.ListenerDelegate<DragonBones.EventObject> arg2 = (DragonBones.ListenerDelegate<DragonBones.EventObject>)ToLua.CheckDelegate<DragonBones.ListenerDelegate<DragonBones.EventObject>>(L, 3);
			DragonBonesUtil.RemoveEventListener(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

