//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UIScrollViewHelperWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UIScrollViewHelper), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("Init", Init);
		L.RegFunction("Reset", Reset);
		L.RegFunction("GetScrollTransform", GetScrollTransform);
		L.RegFunction("GetContentRectTransform", GetContentRectTransform);
		L.RegFunction("GetContentPosition", GetContentPosition);
		L.RegFunction("SetContentSize", SetContentSize);
		L.RegFunction("SetContentWidth", SetContentWidth);
		L.RegFunction("SetContentHeight", SetContentHeight);
		L.RegFunction("SetContentX", SetContentX);
		L.RegFunction("SetContentY", SetContentY);
		L.RegFunction("IsScrollVertical", IsScrollVertical);
		L.RegFunction("AddContentPositionChangedLuaFunction", AddContentPositionChangedLuaFunction);
		L.RegFunction("GetItemParentNode", GetItemParentNode);
		L.RegFunction("GetItemPosition", GetItemPosition);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("onContentPositionChanged", get_onContentPositionChanged, set_onContentPositionChanged);
		L.RegVar("cellSize", get_cellSize, set_cellSize);
		L.RegVar("itemPrefab", get_itemPrefab, set_itemPrefab);
		L.RegVar("itemSize", get_itemSize, set_itemSize);
		L.RegVar("itemGap", get_itemGap, set_itemGap);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIScrollViewHelper obj = (UIScrollViewHelper)ToLua.CheckObject<UIScrollViewHelper>(L, 1);
			obj.Init();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Reset(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIScrollViewHelper obj = (UIScrollViewHelper)ToLua.CheckObject<UIScrollViewHelper>(L, 1);
			obj.Reset();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetScrollTransform(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIScrollViewHelper obj = (UIScrollViewHelper)ToLua.CheckObject<UIScrollViewHelper>(L, 1);
			UnityEngine.RectTransform o = obj.GetScrollTransform();
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetContentRectTransform(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIScrollViewHelper obj = (UIScrollViewHelper)ToLua.CheckObject<UIScrollViewHelper>(L, 1);
			UnityEngine.RectTransform o = obj.GetContentRectTransform();
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetContentPosition(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIScrollViewHelper obj = (UIScrollViewHelper)ToLua.CheckObject<UIScrollViewHelper>(L, 1);
			UnityEngine.Vector2 o = obj.GetContentPosition();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetContentSize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UIScrollViewHelper obj = (UIScrollViewHelper)ToLua.CheckObject<UIScrollViewHelper>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			obj.SetContentSize(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetContentWidth(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIScrollViewHelper obj = (UIScrollViewHelper)ToLua.CheckObject<UIScrollViewHelper>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.SetContentWidth(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetContentHeight(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIScrollViewHelper obj = (UIScrollViewHelper)ToLua.CheckObject<UIScrollViewHelper>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.SetContentHeight(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetContentX(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIScrollViewHelper obj = (UIScrollViewHelper)ToLua.CheckObject<UIScrollViewHelper>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.SetContentX(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetContentY(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIScrollViewHelper obj = (UIScrollViewHelper)ToLua.CheckObject<UIScrollViewHelper>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.SetContentY(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsScrollVertical(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIScrollViewHelper obj = (UIScrollViewHelper)ToLua.CheckObject<UIScrollViewHelper>(L, 1);
			bool o = obj.IsScrollVertical();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddContentPositionChangedLuaFunction(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UIScrollViewHelper obj = (UIScrollViewHelper)ToLua.CheckObject<UIScrollViewHelper>(L, 1);
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			LuaTable arg1 = ToLua.CheckLuaTable(L, 3);
			obj.AddContentPositionChangedLuaFunction(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetItemParentNode(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIScrollViewHelper obj = (UIScrollViewHelper)ToLua.CheckObject<UIScrollViewHelper>(L, 1);
			UnityEngine.Transform o = obj.GetItemParentNode();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetItemPosition(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIScrollViewHelper obj = (UIScrollViewHelper)ToLua.CheckObject<UIScrollViewHelper>(L, 1);
			UnityEngine.Vector2 o = obj.GetItemPosition();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onContentPositionChanged(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIScrollViewHelper obj = (UIScrollViewHelper)o;
			System.Action<int,int> ret = obj.onContentPositionChanged;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onContentPositionChanged on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_cellSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIScrollViewHelper obj = (UIScrollViewHelper)o;
			UnityEngine.Vector2 ret = obj.cellSize;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index cellSize on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_itemPrefab(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIScrollViewHelper obj = (UIScrollViewHelper)o;
			UnityEngine.GameObject ret = obj.itemPrefab;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index itemPrefab on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_itemSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIScrollViewHelper obj = (UIScrollViewHelper)o;
			UnityEngine.Vector2 ret = obj.itemSize;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index itemSize on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_itemGap(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIScrollViewHelper obj = (UIScrollViewHelper)o;
			UnityEngine.Vector2 ret = obj.itemGap;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index itemGap on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onContentPositionChanged(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIScrollViewHelper obj = (UIScrollViewHelper)o;
			System.Action<int,int> arg0 = (System.Action<int,int>)ToLua.CheckDelegate<System.Action<int,int>>(L, 2);
			obj.onContentPositionChanged = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onContentPositionChanged on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_cellSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIScrollViewHelper obj = (UIScrollViewHelper)o;
			UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 2);
			obj.cellSize = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index cellSize on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_itemPrefab(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIScrollViewHelper obj = (UIScrollViewHelper)o;
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.itemPrefab = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index itemPrefab on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_itemSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIScrollViewHelper obj = (UIScrollViewHelper)o;
			UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 2);
			obj.itemSize = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index itemSize on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_itemGap(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIScrollViewHelper obj = (UIScrollViewHelper)o;
			UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 2);
			obj.itemGap = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index itemGap on a nil value");
		}
	}
}

