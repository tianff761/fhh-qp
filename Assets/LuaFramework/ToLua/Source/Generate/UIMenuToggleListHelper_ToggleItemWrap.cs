//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UIMenuToggleListHelper_ToggleItemWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UIMenuToggleListHelper.ToggleItem), typeof(System.Object));
		L.RegFunction("New", _CreateUIMenuToggleListHelper_ToggleItem);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("toggles", get_toggles, set_toggles);
		L.RegVar("lists", get_lists, set_lists);
		L.RegVar("items", get_items, set_items);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUIMenuToggleListHelper_ToggleItem(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				UIMenuToggleListHelper.ToggleItem obj = new UIMenuToggleListHelper.ToggleItem();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: UIMenuToggleListHelper.ToggleItem.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_toggles(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIMenuToggleListHelper.ToggleItem obj = (UIMenuToggleListHelper.ToggleItem)o;
			UnityEngine.UI.Toggle ret = obj.toggles;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index toggles on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_lists(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIMenuToggleListHelper.ToggleItem obj = (UIMenuToggleListHelper.ToggleItem)o;
			UnityEngine.GameObject ret = obj.lists;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index lists on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_items(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIMenuToggleListHelper.ToggleItem obj = (UIMenuToggleListHelper.ToggleItem)o;
			UnityEngine.RectTransform ret = obj.items;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index items on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_toggles(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIMenuToggleListHelper.ToggleItem obj = (UIMenuToggleListHelper.ToggleItem)o;
			UnityEngine.UI.Toggle arg0 = (UnityEngine.UI.Toggle)ToLua.CheckObject<UnityEngine.UI.Toggle>(L, 2);
			obj.toggles = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index toggles on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_lists(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIMenuToggleListHelper.ToggleItem obj = (UIMenuToggleListHelper.ToggleItem)o;
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.lists = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index lists on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_items(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIMenuToggleListHelper.ToggleItem obj = (UIMenuToggleListHelper.ToggleItem)o;
			UnityEngine.RectTransform arg0 = (UnityEngine.RectTransform)ToLua.CheckObject(L, 2, typeof(UnityEngine.RectTransform));
			obj.items = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index items on a nil value");
		}
	}
}

