//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UIMenuToggleListHelperWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UIMenuToggleListHelper), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("InitTogglesItem", InitTogglesItem);
		L.RegFunction("RefreshTogglesItem", RefreshTogglesItem);
		L.RegFunction("CheckIsOnToggle", CheckIsOnToggle);
		L.RegFunction("AddListener", AddListener);
		L.RegFunction("RemoveListener", RemoveListener);
		L.RegFunction("OnToggleChangeValue", OnToggleChangeValue);
		L.RegFunction("GetHightByChilden", GetHightByChilden);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Toggles", get_Toggles, set_Toggles);
		L.RegVar("listName", get_listName, set_listName);
		L.RegVar("playSpeed", get_playSpeed, set_playSpeed);
		L.RegVar("isAutoAddListener", get_isAutoAddListener, set_isAutoAddListener);
		L.RegVar("Items", get_Items, set_Items);
		L.RegVar("toggleItems", get_toggleItems, set_toggleItems);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InitTogglesItem(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIMenuToggleListHelper obj = (UIMenuToggleListHelper)ToLua.CheckObject<UIMenuToggleListHelper>(L, 1);
			obj.InitTogglesItem();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RefreshTogglesItem(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIMenuToggleListHelper obj = (UIMenuToggleListHelper)ToLua.CheckObject<UIMenuToggleListHelper>(L, 1);
			obj.RefreshTogglesItem();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CheckIsOnToggle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIMenuToggleListHelper obj = (UIMenuToggleListHelper)ToLua.CheckObject<UIMenuToggleListHelper>(L, 1);
			obj.CheckIsOnToggle();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddListener(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIMenuToggleListHelper obj = (UIMenuToggleListHelper)ToLua.CheckObject<UIMenuToggleListHelper>(L, 1);
			obj.AddListener();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveListener(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIMenuToggleListHelper obj = (UIMenuToggleListHelper)ToLua.CheckObject<UIMenuToggleListHelper>(L, 1);
			obj.RemoveListener();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnToggleChangeValue(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UIMenuToggleListHelper obj = (UIMenuToggleListHelper)ToLua.CheckObject<UIMenuToggleListHelper>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			UIMenuToggleListHelper.ToggleItem arg1 = (UIMenuToggleListHelper.ToggleItem)ToLua.CheckObject<UIMenuToggleListHelper.ToggleItem>(L, 3);
			obj.OnToggleChangeValue(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetHightByChilden(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIMenuToggleListHelper obj = (UIMenuToggleListHelper)ToLua.CheckObject<UIMenuToggleListHelper>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			float o = obj.GetHightByChilden(arg0);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Toggles(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIMenuToggleListHelper obj = (UIMenuToggleListHelper)o;
			System.Collections.Generic.List<UnityEngine.GameObject> ret = obj.Toggles;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Toggles on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_listName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIMenuToggleListHelper obj = (UIMenuToggleListHelper)o;
			string ret = obj.listName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index listName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_playSpeed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIMenuToggleListHelper obj = (UIMenuToggleListHelper)o;
			float ret = obj.playSpeed;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index playSpeed on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isAutoAddListener(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIMenuToggleListHelper obj = (UIMenuToggleListHelper)o;
			bool ret = obj.isAutoAddListener;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index isAutoAddListener on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Items(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIMenuToggleListHelper obj = (UIMenuToggleListHelper)o;
			System.Collections.Generic.List<UnityEngine.GameObject> ret = obj.Items;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Items on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_toggleItems(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIMenuToggleListHelper obj = (UIMenuToggleListHelper)o;
			System.Collections.Generic.List<UIMenuToggleListHelper.ToggleItem> ret = obj.toggleItems;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index toggleItems on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Toggles(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIMenuToggleListHelper obj = (UIMenuToggleListHelper)o;
			System.Collections.Generic.List<UnityEngine.GameObject> arg0 = (System.Collections.Generic.List<UnityEngine.GameObject>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<UnityEngine.GameObject>));
			obj.Toggles = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Toggles on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_listName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIMenuToggleListHelper obj = (UIMenuToggleListHelper)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.listName = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index listName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_playSpeed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIMenuToggleListHelper obj = (UIMenuToggleListHelper)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.playSpeed = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index playSpeed on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_isAutoAddListener(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIMenuToggleListHelper obj = (UIMenuToggleListHelper)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.isAutoAddListener = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index isAutoAddListener on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Items(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIMenuToggleListHelper obj = (UIMenuToggleListHelper)o;
			System.Collections.Generic.List<UnityEngine.GameObject> arg0 = (System.Collections.Generic.List<UnityEngine.GameObject>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<UnityEngine.GameObject>));
			obj.Items = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Items on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_toggleItems(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIMenuToggleListHelper obj = (UIMenuToggleListHelper)o;
			System.Collections.Generic.List<UIMenuToggleListHelper.ToggleItem> arg0 = (System.Collections.Generic.List<UIMenuToggleListHelper.ToggleItem>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<UIMenuToggleListHelper.ToggleItem>));
			obj.toggleItems = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index toggleItems on a nil value");
		}
	}
}

