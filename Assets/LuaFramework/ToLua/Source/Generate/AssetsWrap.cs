//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class AssetsWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Assets), typeof(System.Object));
		L.RegFunction("New", _CreateAssets);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("StreamingAssetsPath", get_StreamingAssetsPath, null);
		L.RegVar("StreamingAssetsUrlPath", get_StreamingAssetsUrlPath, null);
		L.RegVar("RuntimeAssetsPath", get_RuntimeAssetsPath, null);
		L.RegVar("RuntimeAssetsUrlPath", get_RuntimeAssetsUrlPath, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateAssets(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Assets obj = new Assets();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Assets.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_StreamingAssetsPath(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Assets.StreamingAssetsPath);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_StreamingAssetsUrlPath(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Assets.StreamingAssetsUrlPath);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RuntimeAssetsPath(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Assets.RuntimeAssetsPath);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RuntimeAssetsUrlPath(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Assets.RuntimeAssetsUrlPath);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

