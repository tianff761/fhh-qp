//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_AnimatorRecorderModeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(UnityEngine.AnimatorRecorderMode));
		L.RegVar("Offline", get_Offline, null);
		L.RegVar("Playback", get_Playback, null);
		L.RegVar("Record", get_Record, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<UnityEngine.AnimatorRecorderMode>.Check = CheckType;
		StackTraits<UnityEngine.AnimatorRecorderMode>.Push = Push;
	}

	static void Push(IntPtr L, UnityEngine.AnimatorRecorderMode arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(UnityEngine.AnimatorRecorderMode), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Offline(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.AnimatorRecorderMode.Offline);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Playback(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.AnimatorRecorderMode.Playback);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Record(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.AnimatorRecorderMode.Record);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		UnityEngine.AnimatorRecorderMode o = (UnityEngine.AnimatorRecorderMode)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

