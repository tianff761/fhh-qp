//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class PokerRubCardWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(PokerRubCard), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("Init", Init);
		L.RegFunction("transformPoint", transformPoint);
		L.RegFunction("GetInputMousePoint", GetInputMousePoint);
		L.RegFunction("UpdatePoker", UpdatePoker);
		L.RegFunction("UpdateBookBTTToPoint", UpdateBookBTTToPoint);
		L.RegFunction("UpdateBookLTRToPoint", UpdateBookLTRToPoint);
		L.RegFunction("UpdateBookRTLToPoint", UpdateBookRTLToPoint);
		L.RegFunction("DragPageToPoint", DragPageToPoint);
		L.RegFunction("SetMousePosByNetCalled", SetMousePosByNetCalled);
		L.RegFunction("OnMouseDragRightPage", OnMouseDragRightPage);
		L.RegFunction("OnMouseDragLeftPage", OnMouseDragLeftPage);
		L.RegFunction("OnMouseDragBottomPage", OnMouseDragBottomPage);
		L.RegFunction("OnMouseRelease", OnMouseRelease);
		L.RegFunction("ReleasePage", ReleasePage);
		L.RegFunction("TweenForward", TweenForward);
		L.RegFunction("ResetPointTweenAlpha", ResetPointTweenAlpha);
		L.RegFunction("TweenBack", TweenBack);
		L.RegFunction("TweenTo", TweenTo);
		L.RegFunction("CleanRubPoker", CleanRubPoker);
		L.RegFunction("SetPoker", SetPoker);
		L.RegFunction("ScreenToPosition", ScreenToPosition);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("UICamera", get_UICamera, set_UICamera);
		L.RegVar("PokerPanel", get_PokerPanel, set_PokerPanel);
		L.RegVar("background", get_background, set_background);
		L.RegVar("pokerBack", get_pokerBack, set_pokerBack);
		L.RegVar("pokerFront", get_pokerFront, set_pokerFront);
		L.RegVar("pokerPoint", get_pokerPoint, set_pokerPoint);
		L.RegVar("RightNextRpointImg", get_RightNextRpointImg, set_RightNextRpointImg);
		L.RegVar("RightNextLpointImg", get_RightNextLpointImg, set_RightNextLpointImg);
		L.RegVar("RightRpointImg", get_RightRpointImg, set_RightRpointImg);
		L.RegVar("RightLpointImg", get_RightLpointImg, set_RightLpointImg);
		L.RegVar("interactable", get_interactable, set_interactable);
		L.RegVar("isAutoInteractable", get_isAutoInteractable, set_isAutoInteractable);
		L.RegVar("enableShadowEffect", get_enableShadowEffect, set_enableShadowEffect);
		L.RegVar("showPointOnFilping", get_showPointOnFilping, set_showPointOnFilping);
		L.RegVar("TurnPageClip", get_TurnPageClip, set_TurnPageClip);
		L.RegVar("NextPageClip", get_NextPageClip, set_NextPageClip);
		L.RegVar("Shadow", get_Shadow, set_Shadow);
		L.RegVar("Left", get_Left, set_Left);
		L.RegVar("Right", get_Right, set_Right);
		L.RegVar("RightNext", get_RightNext, set_RightNext);
		L.RegVar("EndFlipComplete", get_EndFlipComplete, set_EndFlipComplete);
		L.RegVar("FlipStartCallBack", get_FlipStartCallBack, set_FlipStartCallBack);
		L.RegVar("FlipUpdateCallBack", get_FlipUpdateCallBack, set_FlipUpdateCallBack);
		L.RegVar("FlipEndCallBack", get_FlipEndCallBack, set_FlipEndCallBack);
		L.RegVar("FlipUpdateInterval", get_FlipUpdateInterval, set_FlipUpdateInterval);
		L.RegVar("EndBottomLeft", get_EndBottomLeft, null);
		L.RegVar("EndBottomRight", get_EndBottomRight, null);
		L.RegVar("width", get_width, null);
		L.RegVar("height", get_height, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				PokerRubCard obj = (PokerRubCard)ToLua.CheckObject<PokerRubCard>(L, 1);
				obj.Init();
				return 0;
			}
			else if (count == 2)
			{
				PokerRubCard obj = (PokerRubCard)ToLua.CheckObject<PokerRubCard>(L, 1);
				UnityEngine.Camera arg0 = (UnityEngine.Camera)ToLua.CheckObject(L, 2, typeof(UnityEngine.Camera));
				obj.Init(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: PokerRubCard.Init");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int transformPoint(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			PokerRubCard obj = (PokerRubCard)ToLua.CheckObject<PokerRubCard>(L, 1);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			UnityEngine.Vector3 o = obj.transformPoint(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetInputMousePoint(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			PokerRubCard obj = (PokerRubCard)ToLua.CheckObject<PokerRubCard>(L, 1);
			UnityEngine.Vector3 o = obj.GetInputMousePoint();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdatePoker(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			PokerRubCard obj = (PokerRubCard)ToLua.CheckObject<PokerRubCard>(L, 1);
			obj.UpdatePoker();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateBookBTTToPoint(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			PokerRubCard obj = (PokerRubCard)ToLua.CheckObject<PokerRubCard>(L, 1);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.UpdateBookBTTToPoint(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateBookLTRToPoint(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			PokerRubCard obj = (PokerRubCard)ToLua.CheckObject<PokerRubCard>(L, 1);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.UpdateBookLTRToPoint(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateBookRTLToPoint(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			PokerRubCard obj = (PokerRubCard)ToLua.CheckObject<PokerRubCard>(L, 1);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.UpdateBookRTLToPoint(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DragPageToPoint(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			PokerRubCard obj = (PokerRubCard)ToLua.CheckObject<PokerRubCard>(L, 1);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.DragPageToPoint(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetMousePosByNetCalled(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			PokerRubCard obj = (PokerRubCard)ToLua.CheckObject<PokerRubCard>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			obj.SetMousePosByNetCalled(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnMouseDragRightPage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			PokerRubCard obj = (PokerRubCard)ToLua.CheckObject<PokerRubCard>(L, 1);
			obj.OnMouseDragRightPage();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnMouseDragLeftPage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			PokerRubCard obj = (PokerRubCard)ToLua.CheckObject<PokerRubCard>(L, 1);
			obj.OnMouseDragLeftPage();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnMouseDragBottomPage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			PokerRubCard obj = (PokerRubCard)ToLua.CheckObject<PokerRubCard>(L, 1);
			obj.OnMouseDragBottomPage();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnMouseRelease(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			PokerRubCard obj = (PokerRubCard)ToLua.CheckObject<PokerRubCard>(L, 1);
			obj.OnMouseRelease();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReleasePage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			PokerRubCard obj = (PokerRubCard)ToLua.CheckObject<PokerRubCard>(L, 1);
			obj.ReleasePage();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int TweenForward(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			PokerRubCard obj = (PokerRubCard)ToLua.CheckObject<PokerRubCard>(L, 1);
			obj.TweenForward();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ResetPointTweenAlpha(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			PokerRubCard obj = (PokerRubCard)ToLua.CheckObject<PokerRubCard>(L, 1);
			obj.ResetPointTweenAlpha();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int TweenBack(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			PokerRubCard obj = (PokerRubCard)ToLua.CheckObject<PokerRubCard>(L, 1);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.TweenBack(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int TweenTo(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			PokerRubCard obj = (PokerRubCard)ToLua.CheckObject<PokerRubCard>(L, 1);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			System.Action arg2 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 4);
			System.Collections.IEnumerator o = obj.TweenTo(arg0, arg1, arg2);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CleanRubPoker(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			PokerRubCard obj = (PokerRubCard)ToLua.CheckObject<PokerRubCard>(L, 1);
			obj.CleanRubPoker();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetPoker(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			PokerRubCard obj = (PokerRubCard)ToLua.CheckObject<PokerRubCard>(L, 1);
			UnityEngine.Sprite arg0 = (UnityEngine.Sprite)ToLua.CheckObject(L, 2, typeof(UnityEngine.Sprite));
			UnityEngine.Sprite arg1 = (UnityEngine.Sprite)ToLua.CheckObject(L, 3, typeof(UnityEngine.Sprite));
			UnityEngine.Sprite arg2 = (UnityEngine.Sprite)ToLua.CheckObject(L, 4, typeof(UnityEngine.Sprite));
			System.Action arg3 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 5);
			obj.SetPoker(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ScreenToPosition(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			PokerRubCard obj = (PokerRubCard)ToLua.CheckObject<PokerRubCard>(L, 1);
			UnityEngine.RectTransform arg0 = (UnityEngine.RectTransform)ToLua.CheckObject(L, 2, typeof(UnityEngine.RectTransform));
			UnityEngine.Vector2 arg1 = ToLua.ToVector2(L, 3);
			UnityEngine.Camera arg2 = (UnityEngine.Camera)ToLua.CheckObject(L, 4, typeof(UnityEngine.Camera));
			UnityEngine.Vector2 o = obj.ScreenToPosition(arg0, arg1, arg2);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UICamera(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			UnityEngine.Camera ret = obj.UICamera;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index UICamera on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PokerPanel(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			UnityEngine.RectTransform ret = obj.PokerPanel;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index PokerPanel on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_background(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			UnityEngine.Sprite ret = obj.background;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index background on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_pokerBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			UnityEngine.Sprite ret = obj.pokerBack;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index pokerBack on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_pokerFront(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			UnityEngine.Sprite ret = obj.pokerFront;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index pokerFront on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_pokerPoint(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			UnityEngine.Sprite ret = obj.pokerPoint;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index pokerPoint on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RightNextRpointImg(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			UnityEngine.UI.Image ret = obj.RightNextRpointImg;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index RightNextRpointImg on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RightNextLpointImg(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			UnityEngine.UI.Image ret = obj.RightNextLpointImg;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index RightNextLpointImg on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RightRpointImg(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			UnityEngine.UI.Image ret = obj.RightRpointImg;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index RightRpointImg on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RightLpointImg(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			UnityEngine.UI.Image ret = obj.RightLpointImg;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index RightLpointImg on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_interactable(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			bool ret = obj.interactable;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index interactable on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isAutoInteractable(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			bool ret = obj.isAutoInteractable;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index isAutoInteractable on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_enableShadowEffect(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			bool ret = obj.enableShadowEffect;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index enableShadowEffect on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_showPointOnFilping(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			bool ret = obj.showPointOnFilping;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index showPointOnFilping on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TurnPageClip(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			UnityEngine.UI.Image ret = obj.TurnPageClip;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index TurnPageClip on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_NextPageClip(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			UnityEngine.UI.Image ret = obj.NextPageClip;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index NextPageClip on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Shadow(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			UnityEngine.UI.Image ret = obj.Shadow;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Shadow on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Left(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			UnityEngine.UI.Image ret = obj.Left;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Left on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Right(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			UnityEngine.UI.Image ret = obj.Right;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Right on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RightNext(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			UnityEngine.UI.Image ret = obj.RightNext;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index RightNext on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_EndFlipComplete(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			System.Action ret = obj.EndFlipComplete;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index EndFlipComplete on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FlipStartCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			System.Action<int,UnityEngine.Vector3> ret = obj.FlipStartCallBack;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index FlipStartCallBack on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FlipUpdateCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			System.Action<int,UnityEngine.Vector3> ret = obj.FlipUpdateCallBack;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index FlipUpdateCallBack on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FlipEndCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			System.Action<int,UnityEngine.Vector3> ret = obj.FlipEndCallBack;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index FlipEndCallBack on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FlipUpdateInterval(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			float ret = obj.FlipUpdateInterval;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index FlipUpdateInterval on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_EndBottomLeft(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			UnityEngine.Vector3 ret = obj.EndBottomLeft;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index EndBottomLeft on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_EndBottomRight(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			UnityEngine.Vector3 ret = obj.EndBottomRight;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index EndBottomRight on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_width(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			float ret = obj.width;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index width on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_height(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			float ret = obj.height;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index height on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_UICamera(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			UnityEngine.Camera arg0 = (UnityEngine.Camera)ToLua.CheckObject(L, 2, typeof(UnityEngine.Camera));
			obj.UICamera = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index UICamera on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_PokerPanel(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			UnityEngine.RectTransform arg0 = (UnityEngine.RectTransform)ToLua.CheckObject(L, 2, typeof(UnityEngine.RectTransform));
			obj.PokerPanel = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index PokerPanel on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_background(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			UnityEngine.Sprite arg0 = (UnityEngine.Sprite)ToLua.CheckObject(L, 2, typeof(UnityEngine.Sprite));
			obj.background = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index background on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_pokerBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			UnityEngine.Sprite arg0 = (UnityEngine.Sprite)ToLua.CheckObject(L, 2, typeof(UnityEngine.Sprite));
			obj.pokerBack = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index pokerBack on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_pokerFront(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			UnityEngine.Sprite arg0 = (UnityEngine.Sprite)ToLua.CheckObject(L, 2, typeof(UnityEngine.Sprite));
			obj.pokerFront = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index pokerFront on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_pokerPoint(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			UnityEngine.Sprite arg0 = (UnityEngine.Sprite)ToLua.CheckObject(L, 2, typeof(UnityEngine.Sprite));
			obj.pokerPoint = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index pokerPoint on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_RightNextRpointImg(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			UnityEngine.UI.Image arg0 = (UnityEngine.UI.Image)ToLua.CheckObject<UnityEngine.UI.Image>(L, 2);
			obj.RightNextRpointImg = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index RightNextRpointImg on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_RightNextLpointImg(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			UnityEngine.UI.Image arg0 = (UnityEngine.UI.Image)ToLua.CheckObject<UnityEngine.UI.Image>(L, 2);
			obj.RightNextLpointImg = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index RightNextLpointImg on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_RightRpointImg(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			UnityEngine.UI.Image arg0 = (UnityEngine.UI.Image)ToLua.CheckObject<UnityEngine.UI.Image>(L, 2);
			obj.RightRpointImg = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index RightRpointImg on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_RightLpointImg(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			UnityEngine.UI.Image arg0 = (UnityEngine.UI.Image)ToLua.CheckObject<UnityEngine.UI.Image>(L, 2);
			obj.RightLpointImg = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index RightLpointImg on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_interactable(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.interactable = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index interactable on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_isAutoInteractable(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.isAutoInteractable = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index isAutoInteractable on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_enableShadowEffect(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.enableShadowEffect = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index enableShadowEffect on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_showPointOnFilping(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.showPointOnFilping = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index showPointOnFilping on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_TurnPageClip(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			UnityEngine.UI.Image arg0 = (UnityEngine.UI.Image)ToLua.CheckObject<UnityEngine.UI.Image>(L, 2);
			obj.TurnPageClip = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index TurnPageClip on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_NextPageClip(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			UnityEngine.UI.Image arg0 = (UnityEngine.UI.Image)ToLua.CheckObject<UnityEngine.UI.Image>(L, 2);
			obj.NextPageClip = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index NextPageClip on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Shadow(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			UnityEngine.UI.Image arg0 = (UnityEngine.UI.Image)ToLua.CheckObject<UnityEngine.UI.Image>(L, 2);
			obj.Shadow = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Shadow on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Left(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			UnityEngine.UI.Image arg0 = (UnityEngine.UI.Image)ToLua.CheckObject<UnityEngine.UI.Image>(L, 2);
			obj.Left = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Left on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Right(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			UnityEngine.UI.Image arg0 = (UnityEngine.UI.Image)ToLua.CheckObject<UnityEngine.UI.Image>(L, 2);
			obj.Right = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Right on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_RightNext(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			UnityEngine.UI.Image arg0 = (UnityEngine.UI.Image)ToLua.CheckObject<UnityEngine.UI.Image>(L, 2);
			obj.RightNext = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index RightNext on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_EndFlipComplete(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.EndFlipComplete = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index EndFlipComplete on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_FlipStartCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			System.Action<int,UnityEngine.Vector3> arg0 = (System.Action<int,UnityEngine.Vector3>)ToLua.CheckDelegate<System.Action<int,UnityEngine.Vector3>>(L, 2);
			obj.FlipStartCallBack = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index FlipStartCallBack on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_FlipUpdateCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			System.Action<int,UnityEngine.Vector3> arg0 = (System.Action<int,UnityEngine.Vector3>)ToLua.CheckDelegate<System.Action<int,UnityEngine.Vector3>>(L, 2);
			obj.FlipUpdateCallBack = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index FlipUpdateCallBack on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_FlipEndCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			System.Action<int,UnityEngine.Vector3> arg0 = (System.Action<int,UnityEngine.Vector3>)ToLua.CheckDelegate<System.Action<int,UnityEngine.Vector3>>(L, 2);
			obj.FlipEndCallBack = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index FlipEndCallBack on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_FlipUpdateInterval(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PokerRubCard obj = (PokerRubCard)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.FlipUpdateInterval = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index FlipUpdateInterval on a nil value");
		}
	}
}

