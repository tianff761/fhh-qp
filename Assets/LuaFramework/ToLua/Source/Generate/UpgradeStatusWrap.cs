//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UpgradeStatusWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UpgradeStatus), typeof(System.Object));
		L.RegFunction("Reset", Reset);
		L.RegFunction("SetTips", SetTips);
		L.RegFunction("New", _CreateUpgradeStatus);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegConstant("NONE", 0);
		L.RegConstant("BEGIN", 1);
		L.RegConstant("CHECK", 2);
		L.RegConstant("COPY", 3);
		L.RegConstant("DOWNLOAD", 4);
		L.RegConstant("FINISHED", 5);
		L.RegConstant("STOP", 6);
		L.RegVar("TIPS_TXT_BEGIN", get_TIPS_TXT_BEGIN, null);
		L.RegVar("TIPS_TXT_CHECK", get_TIPS_TXT_CHECK, null);
		L.RegVar("TIPS_TXT_COPY", get_TIPS_TXT_COPY, null);
		L.RegVar("TIPS_TXT_DOWNLOAD", get_TIPS_TXT_DOWNLOAD, null);
		L.RegVar("BeginTipsTxt", get_BeginTipsTxt, set_BeginTipsTxt);
		L.RegVar("CheckTipsTxt", get_CheckTipsTxt, set_CheckTipsTxt);
		L.RegVar("CopyTipsTxt", get_CopyTipsTxt, set_CopyTipsTxt);
		L.RegVar("DownloadTipsTxt", get_DownloadTipsTxt, set_DownloadTipsTxt);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUpgradeStatus(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				UpgradeStatus obj = new UpgradeStatus();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: UpgradeStatus.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Reset(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			UpgradeStatus.Reset();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetTips(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			string arg0 = ToLua.CheckString(L, 1);
			string arg1 = ToLua.CheckString(L, 2);
			string arg2 = ToLua.CheckString(L, 3);
			string arg3 = ToLua.CheckString(L, 4);
			UpgradeStatus.SetTips(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TIPS_TXT_BEGIN(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, UpgradeStatus.TIPS_TXT_BEGIN);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TIPS_TXT_CHECK(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, UpgradeStatus.TIPS_TXT_CHECK);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TIPS_TXT_COPY(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, UpgradeStatus.TIPS_TXT_COPY);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TIPS_TXT_DOWNLOAD(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, UpgradeStatus.TIPS_TXT_DOWNLOAD);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BeginTipsTxt(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, UpgradeStatus.BeginTipsTxt);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CheckTipsTxt(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, UpgradeStatus.CheckTipsTxt);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CopyTipsTxt(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, UpgradeStatus.CopyTipsTxt);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DownloadTipsTxt(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, UpgradeStatus.DownloadTipsTxt);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_BeginTipsTxt(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			UpgradeStatus.BeginTipsTxt = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_CheckTipsTxt(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			UpgradeStatus.CheckTipsTxt = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_CopyTipsTxt(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			UpgradeStatus.CopyTipsTxt = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_DownloadTipsTxt(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			UpgradeStatus.DownloadTipsTxt = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

