//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UIDownUpThroughListenerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UIDownUpThroughListener), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("Get", Get);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("onClick", get_onClick, set_onClick);
		L.RegVar("onDown", get_onDown, set_onDown);
		L.RegVar("onUp", get_onUp, set_onUp);
		L.RegVar("passCount", get_passCount, set_passCount);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Get(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
			UIDownUpThroughListener o = UIDownUpThroughListener.Get(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onClick(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIDownUpThroughListener obj = (UIDownUpThroughListener)o;
			System.Action<UIDownUpThroughListener,UnityEngine.EventSystems.PointerEventData> ret = obj.onClick;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onClick on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onDown(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIDownUpThroughListener obj = (UIDownUpThroughListener)o;
			System.Action<UIDownUpThroughListener,UnityEngine.EventSystems.PointerEventData> ret = obj.onDown;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onDown on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onUp(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIDownUpThroughListener obj = (UIDownUpThroughListener)o;
			System.Action<UIDownUpThroughListener,UnityEngine.EventSystems.PointerEventData> ret = obj.onUp;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onUp on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_passCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIDownUpThroughListener obj = (UIDownUpThroughListener)o;
			int ret = obj.passCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index passCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onClick(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIDownUpThroughListener obj = (UIDownUpThroughListener)o;
			System.Action<UIDownUpThroughListener,UnityEngine.EventSystems.PointerEventData> arg0 = (System.Action<UIDownUpThroughListener,UnityEngine.EventSystems.PointerEventData>)ToLua.CheckDelegate<System.Action<UIDownUpThroughListener,UnityEngine.EventSystems.PointerEventData>>(L, 2);
			obj.onClick = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onClick on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onDown(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIDownUpThroughListener obj = (UIDownUpThroughListener)o;
			System.Action<UIDownUpThroughListener,UnityEngine.EventSystems.PointerEventData> arg0 = (System.Action<UIDownUpThroughListener,UnityEngine.EventSystems.PointerEventData>)ToLua.CheckDelegate<System.Action<UIDownUpThroughListener,UnityEngine.EventSystems.PointerEventData>>(L, 2);
			obj.onDown = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onDown on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onUp(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIDownUpThroughListener obj = (UIDownUpThroughListener)o;
			System.Action<UIDownUpThroughListener,UnityEngine.EventSystems.PointerEventData> arg0 = (System.Action<UIDownUpThroughListener,UnityEngine.EventSystems.PointerEventData>)ToLua.CheckDelegate<System.Action<UIDownUpThroughListener,UnityEngine.EventSystems.PointerEventData>>(L, 2);
			obj.onUp = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onUp on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_passCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIDownUpThroughListener obj = (UIDownUpThroughListener)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.passCount = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index passCount on a nil value");
		}
	}
}

