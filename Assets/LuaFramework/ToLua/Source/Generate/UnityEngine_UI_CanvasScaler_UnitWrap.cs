//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_UI_CanvasScaler_UnitWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(UnityEngine.UI.CanvasScaler.Unit));
		L.RegVar("Centimeters", get_Centimeters, null);
		L.RegVar("Millimeters", get_Millimeters, null);
		L.RegVar("Inches", get_Inches, null);
		L.RegVar("Points", get_Points, null);
		L.RegVar("Picas", get_Picas, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<UnityEngine.UI.CanvasScaler.Unit>.Check = CheckType;
		StackTraits<UnityEngine.UI.CanvasScaler.Unit>.Push = Push;
	}

	static void Push(IntPtr L, UnityEngine.UI.CanvasScaler.Unit arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(UnityEngine.UI.CanvasScaler.Unit), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Centimeters(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.UI.CanvasScaler.Unit.Centimeters);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Millimeters(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.UI.CanvasScaler.Unit.Millimeters);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Inches(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.UI.CanvasScaler.Unit.Inches);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Points(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.UI.CanvasScaler.Unit.Points);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Picas(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.UI.CanvasScaler.Unit.Picas);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		UnityEngine.UI.CanvasScaler.Unit o = (UnityEngine.UI.CanvasScaler.Unit)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

